version: '3.8'

services:
  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: grc-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - grc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: grc-postgres
    environment:
      POSTGRES_DB: grc_platform
      POSTGRES_USER: grc_user
      POSTGRES_PASSWORD: grc_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grc_user -d grc_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grc-network

  # Redis Cache and Message Broker
  redis:
    image: redis:7-alpine
    container_name: grc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - grc-network

  # Chroma Vector Database
  chroma:
    image: chromadb/chroma:latest
    container_name: grc-chroma
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    networks:
      - grc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Enhanced AI Agents with Industry Multi-Agent Strategy
  ai-agents-enhanced:
    build:
      context: ./ai-agents
      dockerfile: Dockerfile.enhanced
    container_name: grc-ai-agents-enhanced
    environment:
      - REDIS_URL=redis://redis:6379
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - POSTGRES_URL=postgresql://grc_user:grc_password@postgres:5432/grc_platform
      - PORT=8006
    ports:
      - "8006:8006"
    volumes:
      - ./ai-agents:/app
      - ./vector-db:/app/vector-db
    depends_on:
      redis:
        condition: service_healthy
      chroma:
        condition: service_healthy
      ollama:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - grc-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: grc-api-gateway
    environment:
      - AI_AGENTS_URL=http://ai-agents-enhanced:8006
      - PORT=8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend/api-gateway:/app
    depends_on:
      ai-agents-enhanced:
        condition: service_started
    networks:
      - grc-network
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: grc-frontend
    environment:
      - VITE_API_GATEWAY_URL=http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      api-gateway:
        condition: service_started
    networks:
      - grc-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  chroma_data:
    driver: local
  ollama_data:
    driver: local

networks:
  grc-network:
    driver: bridge
