[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grc-platform"
version = "1.0.0"
description = "GRC Platform - Governance, Risk, and Compliance Management System"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "GRC Platform Team", email = "team@grcplatform.com"},
]
keywords = ["grc", "governance", "risk", "compliance", "ai", "agents"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    "fastapi>=0.115.6",
    "uvicorn[standard]>=0.32.1",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.6.1",
    "sqlalchemy>=2.0.35",
    "psycopg2-binary>=2.9.10",
    "redis>=5.2.1",
    "aioredis>=2.0.1",
    "openai>=1.54.4",
    "langchain>=0.3.7",
    "langchain-community>=0.3.7",
    "chromadb>=0.5.23",
    "ollama>=0.4.2",
    "numpy>=1.26.4",
    "pandas>=2.2.3",
    "httpx>=0.28.1",
    "requests>=2.32.3",
    "python-dotenv>=1.0.1",
    "aiofiles>=24.1.0",
    "cryptography>=44.0.0",
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.12",
    "jinja2>=3.1.4",
    "markdown>=3.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "black>=24.10.0",
    "flake8>=7.1.1",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
]
monitoring = [
    "prometheus-client>=0.21.1",
    "grafana-api>=1.0.3",
]
testing = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "httpx>=0.28.1",
]

[project.urls]
Homepage = "https://github.com/grc-platform/grc-platform"
Documentation = "https://docs.grcplatform.com"
Repository = "https://github.com/grc-platform/grc-platform.git"
"Bug Tracker" = "https://github.com/grc-platform/grc-platform/issues"

[project.scripts]
grc-platform = "grc_platform.cli:main"
grc-start = "scripts.setup.start_services:main"
grc-test = "scripts.testing.run_tests:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["grc_platform*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "chromadb.*",
    "ollama.*",
    "langchain.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
